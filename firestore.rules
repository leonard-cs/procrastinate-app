rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // More permissive rules for tasks while testing
    match /tasks/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // More permissive rules for study sessions while testing
    match /studySessions/{document=**} {
      allow read, write: if request.auth != null;
    }

    // Study session requests - users can read requests sent to them and create requests
    match /studySessionRequests/{requestId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.requesterId || 
         request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.requesterId;
    }
    
    // Buddy pairs - users can manage their own buddy relationships
    match /buddyPairs/{pairId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.buddyId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // General pokes - users can send pokes to others and read pokes sent to them
    match /generalPokes/{pokeId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.fromUserId || 
         request.auth.uid == resource.data.toUserId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.fromUserId;
    }
    
    // Buddy study sessions - users can manage study sessions with their buddies
    match /buddyStudySessions/{sessionId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.user1Id || 
         request.auth.uid == resource.data.user2Id);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.user1Id;
    }
    
    // Allow read access to any document for authenticated users (for debugging)
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if false; // Still restrict writes to specific collections
    }
  }
} 